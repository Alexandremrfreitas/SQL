https://towardsdatascience.com/10-problems-to-practice-almost-all-sql-concepts-37545e7c5219

1. Given two tables below, write a query to display the comparison result (higher/lower/same) of the average salary of employees in a department to the companyâ€™s average salary.

-- Table: salary
-- | id | employee_id | amount | pay_date   |
-- |----|-------------|--------|------------|
-- | 1  | 1           | 9000   | 2017-03-31 |
-- | 2  | 2           | 6000   | 2017-03-31 |
-- | 3  | 3           | 10000  | 2017-03-31 |
-- | 4  | 1           | 7000   | 2017-02-28 |
-- | 5  | 2           | 6000   | 2017-02-28 |
-- | 6  | 3           | 8000   | 2017-02-28 |
 
-- The employee_id column refers to the employee_id in the following table employee.

-- | employee_id | department_id |
-- |-------------|---------------|
-- | 1           | 1             |
-- | 2           | 2             |
-- | 3           | 2             |
 

-- So for the sample data above, the result is:

-- | pay_month | department_id | comparison  |
-- |-----------|---------------|-------------|
-- | 2017-03   | 1             | higher      |
-- | 2017-03   | 2             | lower       |
-- | 2017-02   | 1             | same        |
-- | 2017-02   | 2             | same        |
 
 
 
 SOLUTION:
 
 WITH t1 AS
(
  SELECT TO_CHAR(pay_date,'YYYY-MM') as pay_month, department_id, 
	  AVG(amount) OVER(PARTITION BY DATE_PART('month',pay_date),department_id) as dept_avg, 
	  AVG(amount) OVER(PARTITION BY DATE_PART('month',pay_date)) as comp_avg
	FROM salary as s JOIN employee as e USING (employee_id)
)

SELECT DISTINCT pay_month, department_id, 
  CASE WHEN dept_avg > comp_avg THEN 'higher'
  WHEN dept_avg = comp_avg THEN 'same'
  ELSE 'lower'
  END AS comparison
FROM t1
ORDER BY 1 DESC
