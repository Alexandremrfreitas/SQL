Q5 Report contiguous dates (MySQL)— Date_sub, ROW_NUMBER

5. Write an SQL query to generate a report of period_state for each continuous interval of days in the period from 2019–01–01 to 2019–12–31.

-- A system is running one task every day. Every task is independent of the previous tasks. 
The tasks can fail or succeed.

-- Write an SQL query to generate a report of period_state for each continuous interval of
days in the period from 2019-01-01 to 2019-12-31.

-- period_state is 'failed' if tasks in this interval failed or 'succeeded' if tasks 
in this interval succeeded. Interval of days are retrieved as start_date and end_date.

-- Order result by start_date.

-- The query result format is in the following example:

-- Failed table:
-- +-------------------+
-- | fail_date         |
-- +-------------------+
-- | 2018-12-28        |
-- | 2018-12-29        |
-- | 2019-01-04        |
-- | 2019-01-05        |
-- +-------------------+

-- Succeeded table:
-- +-------------------+
-- | success_date      |
-- +-------------------+
-- | 2018-12-30        |
-- | 2018-12-31        |
-- | 2019-01-01        |
-- | 2019-01-02        |
-- | 2019-01-03        |
-- | 2019-01-06        |
-- +-------------------+


-- Result table:
-- +--------------+--------------+--------------+
-- | period_state | start_date   | end_date     |
-- +--------------+--------------+--------------+
-- | succeeded    | 2019-01-01   | 2019-01-03   |
-- | failed       | 2019-01-04   | 2019-01-05   |
-- | succeeded    | 2019-01-06   | 2019-01-06   |
-- +--------------+--------------+--------------+

-- The report ignored the system state in 2018 as we care about the system in the
period 2019-01-01 to 2019-12-31.
-- From 2019-01-01 to 2019-01-03 all tasks succeeded and the system state was "succeeded".
-- From 2019-01-04 to 2019-01-05 all tasks failed and system state was "failed".
-- From 2019-01-06 to 2019-01-06 all tasks succeeded and system state was "succeeded".

SOLUTION:

WITH t1 AS(
            SELECT MIN(success_date) AS start_date,
                   MAX(success_date) AS end_date,
                   state
            FROM(
                  SELECT success_date, 
                         DATE_SUB(success_date, INTERVAL ROW_NUMBER() OVER(ORDER BY success_date) DAY) AS diff, 
                         1 AS state
                  FROM succeeded
                  WHERE success_date BETWEEN "2019-01-01" AND "2019-12-31") AS a
            GROUP BY diff),

    t2 AS(
            SELECT MIN(fail_date) AS start_date, 
                   MAX(fail_date) AS end_date, 
                   state
            FROM(
                  SELECT fail_date,
                         DATE_SUB(fail_date, INTERVAL ROW_NUMBER() OVER(ORDER BY success_date) DAY) as diff,
                         0 as state
                  FROM failed
                  WHERE fail_date BETWEEN "2019-01-01" AND "2019-12-31") AS b
            GROUP BY diff)

SELECT CASE WHEN c.state = 1 THEN "succeeded"
        ELSE "failed"
        END AS period_state, start_date, end_date
  FROM (
        SELECT *
          FROM t1
        UNION ALL
        SELECT *
          FROM t2) AS c
  ORDER BY start_date
